dHa_norm <- as.numeric(norm_coefficients["dHa_VoVc"])
Bernacchi_PrPs_ratio_Tp3 <- (c_norm * exp(-dHa_norm / (R * Tp)))
Makino_PrPs_ratio_Tp3 <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp3
are_equal <- (Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp3) | (Makino_PrPs_ratio_Tp2 == Makino_PrPs_ratio_Tp3)
print(are_equal)
are_equal <- (Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp3) |
(Makino_PrPs_ratio_Tp2 == Makino_PrPs_ratio_Tp3)
print(are_equal)
View(Temp_Range)
View(Temp_Range)
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
squared_residuals <- Temp_Range$nls_residuals^2
mse <- mean(squared_residuals)
squared_residuals <- Temp_Range$nls_residuals^2
mse <- mean(squared_residuals)
nls_AIC <- AIC(nls_model)
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
linear_model <- lm(Vo_Vc_ratio ~ Temp_K, data = Temp_Range)
summary(linear_model)
linear_AIC <- AIC(linear_model)
linear_model <- lm(Vo_Vc_ratio ~ Temp_K, data = Temp_Range)
summary(linear_model)
linear_AIC <- AIC(linear_model)
Temp_Range$fitted_linear <- predict(linear_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = fitted_linear), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_linear.png")
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 8.314/1000                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = "Temperature (°C)", y = "Vo/Vc") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 8.314/1000                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = "Temperature (°C)", y = "Vo/Vc") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 8.314/1000                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo/Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_VcVo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vo)) +
geom_line(color = "green") +
geom_point(color = "green", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vc)) +
geom_line(color = "red") +
geom_point(color = "red", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vc.png")
Bernacchi_Vc_Tp <- exp(c_Vc - dHa_Vc / (R * Tp))
Bernacchi_Vo_Tp <- exp(c_Vo - dHa_Vo / (R * Tp))
Bernacchi_PrPs_ratio_Tp <- Bernacchi_Vo_Tp / Bernacchi_Vc_Tp
Makino_Vc_25 <- 1.77                                # Carboxylase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_Vo_25 <- 0.58                                # Oxygenase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_PrPs_ratio_25 <- Makino_Vo_25 / Makino_Vc_25 # Vo/Vc ratio
Makino_PrPs_ratio_Tp <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp/Bernacchi_PrPs_ratio_25
T <- Temp_Range$Temp_K      # Temperature in K
y <- Temp_Range$Vo_Vc_ratio # Vo/Vc ratio
#nls_model <- nls(y ~ c_VoVc * exp(-dHa_VoVc / (R * T)), data = Temp_Range, start = list(c_VoVc = 0.3, dHa_VoVc = 60))
nls_model <- nlsLM(Vo_Vc_ratio ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_model)
Temp_Range$fitted <- predict(nls_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Non-linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_nlsLM.png")
Temp_Range$nls_residuals <- Temp_Range$Vo_Vc_ratio - Temp_Range$fitted
ggplot(Temp_Range, aes(x = Temp_K, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Temperature (K)",
y = "Residuals",
title = "Non-Linear Residuals vs. Temperature")
ggsave("Outputs/nlsLM_residuals_temp.png")
ggplot(Temp_Range, aes(x = fitted, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Fitted Values",
y = "Residuals",
title = "Non-Linear Residuals vs. Fitted Values")
ggsave("Outputs/nlsLM_residuals_fitted.png")
SST <- sum((Temp_Range$Vo_Vc_ratio - mean(Temp_Range$Vo_Vc_ratio))^2)     # Total sum of squares
SSR <- sum(Temp_Range$nls_residuals^2)                                    # Residual sum of squares
R_squared <- 1 - (SSR / SST)
squared_residuals <- Temp_Range$nls_residuals^2
mse <- mean(squared_residuals)
nls_AIC <- AIC(nls_model)
linear_model <- lm(Vo_Vc_ratio ~ Temp_K, data = Temp_Range)
summary(linear_model)
linear_AIC <- AIC(linear_model)
Temp_Range$lin_fitted <- predict(linear_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = lin_fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_linear.png")
coefficients <- coef(nls_model)
c_VoVc <- as.numeric(coefficients["c_VoVc"])
dHa_VoVc <- as.numeric(coefficients["dHa_VoVc"])
conv_ratio <- Makino_PrPs_ratio_25/Bernacchi_PrPs_ratio_25
Bernacchi_PrPs_ratio_Tp2 <- (c_VoVc * exp(-dHa_VoVc / (R * Tp)))
Makino_PrPs_ratio_Tp2 <- Bernacchi_PrPs_ratio_Tp2*conv_ratio
are_equal <- Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp2
print(are_equal)
normalized_ratios <- Temp_Range$Vo_Vc_ratio/Bernacchi_PrPs_ratio_25;
nls_norm_model <- nlsLM(normalized_ratios ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_norm_model)
norm_coefficients <- coef(nls_norm_model)
c_norm <- as.numeric(norm_coefficients["c_VoVc"])
dHa_norm <- as.numeric(norm_coefficients["dHa_VoVc"])
Bernacchi_PrPs_ratio_Tp3 <- (c_norm * exp(-dHa_norm / (R * Tp)))
Makino_PrPs_ratio_Tp3 <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp3
are_equal <- (Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp3) |
(Makino_PrPs_ratio_Tp2 == Makino_PrPs_ratio_Tp3)
print(are_equal)
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 8.314/1000                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo/Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_VcVo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vo)) +
geom_line(color = "green") +
geom_point(color = "green", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vc)) +
geom_line(color = "red") +
geom_point(color = "red", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vc.png")
Bernacchi_Vc_Tp <- exp(c_Vc - dHa_Vc / (R * Tp))
Bernacchi_Vo_Tp <- exp(c_Vo - dHa_Vo / (R * Tp))
Bernacchi_PrPs_ratio_Tp <- Bernacchi_Vo_Tp / Bernacchi_Vc_Tp
Makino_Vc_25 <- 1.77                                # Carboxylase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_Vo_25 <- 0.58                                # Oxygenase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_PrPs_ratio_25 <- Makino_Vo_25 / Makino_Vc_25 # Vo/Vc ratio
Makino_PrPs_ratio_Tp <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp/Bernacchi_PrPs_ratio_25
T <- Temp_Range$Temp_K      # Temperature in K
y <- Temp_Range$Vo_Vc_ratio # Vo/Vc ratio
#nls_model <- nls(y ~ c_VoVc * exp(-dHa_VoVc / (R * T)), data = Temp_Range, start = list(c_VoVc = 0.3, dHa_VoVc = 60))
nls_model <- nlsLM(Vo_Vc_ratio ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_model)
Temp_Range$fitted <- predict(nls_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Non-linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_nlsLM.png")
Temp_Range$nls_residuals <- Temp_Range$Vo_Vc_ratio - Temp_Range$fitted
ggplot(Temp_Range, aes(x = Temp_K, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Temperature (K)",
y = "Residuals",
title = "Non-Linear Residuals vs. Temperature")
ggsave("Outputs/nlsLM_residuals_temp.png")
ggplot(Temp_Range, aes(x = fitted, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Fitted Values",
y = "Residuals",
title = "Non-Linear Residuals vs. Fitted Values")
ggsave("Outputs/nlsLM_residuals_fitted.png")
SST <- sum((Temp_Range$Vo_Vc_ratio - mean(Temp_Range$Vo_Vc_ratio))^2)     # Total sum of squares
SSR <- sum(Temp_Range$nls_residuals^2)                                    # Residual sum of squares
R_squared <- 1 - (SSR / SST)
squared_residuals <- Temp_Range$nls_residuals^2
mse <- mean(squared_residuals)
nls_AIC <- AIC(nls_model)
linear_model <- lm(Vo_Vc_ratio ~ Temp_K, data = Temp_Range)
summary(linear_model)
linear_AIC <- AIC(linear_model)
Temp_Range$lin_fitted <- predict(linear_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = lin_fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_linear.png")
coefficients <- coef(nls_model)
c_VoVc <- as.numeric(coefficients["c_VoVc"])
dHa_VoVc <- as.numeric(coefficients["dHa_VoVc"])
conv_ratio <- Makino_PrPs_ratio_25/Bernacchi_PrPs_ratio_25
Bernacchi_PrPs_ratio_Tp2 <- (c_VoVc * exp(-dHa_VoVc / (R * Tp)))
Makino_PrPs_ratio_Tp2 <- Bernacchi_PrPs_ratio_Tp2*conv_ratio
are_equal <- Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp2
print(are_equal)
normalized_ratios <- Temp_Range$Vo_Vc_ratio/Bernacchi_PrPs_ratio_25;
nls_norm_model <- nlsLM(normalized_ratios ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_norm_model)
norm_coefficients <- coef(nls_norm_model)
c_norm <- as.numeric(norm_coefficients["c_VoVc"])
dHa_norm <- as.numeric(norm_coefficients["dHa_VoVc"])
Bernacchi_PrPs_ratio_Tp3 <- (c_norm * exp(-dHa_norm / (R * Tp)))
Makino_PrPs_ratio_Tp3 <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp3
are_equal <- (Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp3) |
(Makino_PrPs_ratio_Tp2 == Makino_PrPs_ratio_Tp3)
print(are_equal)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
print(Bernacchi_PrPs_ratio_25)
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 8.314/1000                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
print(Bernacchi_PrPs_ratio_25)
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo/Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_VcVo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vo)) +
geom_line(color = "green") +
geom_point(color = "green", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vc)) +
geom_line(color = "red") +
geom_point(color = "red", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vc.png")
Bernacchi_Vc_Tp <- exp(c_Vc - dHa_Vc / (R * Tp))
Bernacchi_Vo_Tp <- exp(c_Vo - dHa_Vo / (R * Tp))
Bernacchi_PrPs_ratio_Tp <- Bernacchi_Vo_Tp / Bernacchi_Vc_Tp
print(Bernacchi_PrPs_ratio_Tp)
Makino_Vc_25 <- 1.77                                # Carboxylase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_Vo_25 <- 0.58                                # Oxygenase activity (µmol (mg enzyme)⁻¹ min⁻¹)
Makino_PrPs_ratio_25 <- Makino_Vo_25 / Makino_Vc_25 # Vo/Vc ratio
print(Makino_PrPs_ratio_25)
Makino_PrPs_ratio_Tp <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp/Bernacchi_PrPs_ratio_25
print(Makino_PrPs_ratio_Tp)
T <- Temp_Range$Temp_K      # Temperature in K
y <- Temp_Range$Vo_Vc_ratio # Vo/Vc ratio
#nls_model <- nls(y ~ c_VoVc * exp(-dHa_VoVc / (R * T)), data = Temp_Range, start = list(c_VoVc = 0.3, dHa_VoVc = 60))
nls_model <- nlsLM(Vo_Vc_ratio ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_model)
Temp_Range$fitted <- predict(nls_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Non-linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_nlsLM.png")
Temp_Range$nls_residuals <- Temp_Range$Vo_Vc_ratio - Temp_Range$fitted
ggplot(Temp_Range, aes(x = Temp_K, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Temperature (K)",
y = "Residuals",
title = "Non-Linear Residuals vs. Temperature")
ggsave("Outputs/nlsLM_residuals_temp.png")
ggplot(Temp_Range, aes(x = fitted, y = nls_residuals)) +
geom_point() +
geom_hline(yintercept = 0,
linetype = "dashed",
color = "red") +
scale_y_continuous(limits = c(-8e-16, +8e-16)) +
labs(x = "Fitted Values",
y = "Residuals",
title = "Non-Linear Residuals vs. Fitted Values")
ggsave("Outputs/nlsLM_residuals_fitted.png")
SST <- sum((Temp_Range$Vo_Vc_ratio - mean(Temp_Range$Vo_Vc_ratio))^2)     # Total sum of squares
SSR <- sum(Temp_Range$nls_residuals^2)                                    # Residual sum of squares
R_squared <- 1 - (SSR / SST)
print(R_squared)
squared_residuals <- Temp_Range$nls_residuals^2
mse <- mean(squared_residuals)
print(mse)
nls_AIC <- AIC(nls_model)
print(nls_AIC)
linear_model <- lm(Vo_Vc_ratio ~ Temp_K, data = Temp_Range)
summary(linear_model)
linear_AIC <- AIC(linear_model)
print(linear_AIC)
Temp_Range$lin_fitted <- predict(linear_model)
ggplot(Temp_Range, aes(x = Temp_K, y = Vo_Vc_ratio)) +
geom_point() +
geom_line(aes(y = lin_fitted), color = "red") +
labs(x = "Temperature (K)",
y = "Vo/Vc Ratio",
title = "Linear Fit for Vo/Vc")
ggsave("Outputs/Temp_vs_VoVc_linear.png")
coefficients <- coef(nls_model)
c_VoVc <- as.numeric(coefficients["c_VoVc"])
dHa_VoVc <- as.numeric(coefficients["dHa_VoVc"])
conv_ratio <- Makino_PrPs_ratio_25/Bernacchi_PrPs_ratio_25
Bernacchi_PrPs_ratio_Tp2 <- (c_VoVc * exp(-dHa_VoVc / (R * Tp)))
print(Bernacchi_PrPs_ratio_Tp2)
Makino_PrPs_ratio_Tp2 <- Bernacchi_PrPs_ratio_Tp2*conv_ratio
print(Makino_PrPs_ratio_Tp2)
are_equal <- Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp2
print(are_equal)
normalized_ratios <- Temp_Range$Vo_Vc_ratio/Bernacchi_PrPs_ratio_25;
nls_norm_model <- nlsLM(normalized_ratios ~ c_VoVc * exp(-dHa_VoVc / (R * T)),
data = Temp_Range,
start = list(c_VoVc = 0,
dHa_VoVc = 2))
summary(nls_norm_model)
norm_coefficients <- coef(nls_norm_model)
c_norm <- as.numeric(norm_coefficients["c_VoVc"])
dHa_norm <- as.numeric(norm_coefficients["dHa_VoVc"])
Bernacchi_PrPs_ratio_Tp3 <- (c_norm * exp(-dHa_norm / (R * Tp)))
print(Bernacchi_PrPs_ratio_Tp3)
Makino_PrPs_ratio_Tp3 <- Makino_PrPs_ratio_25*Bernacchi_PrPs_ratio_Tp3
print(Makino_PrPs_ratio_Tp3)
are_equal <- (Makino_PrPs_ratio_Tp == Makino_PrPs_ratio_Tp3) |
(Makino_PrPs_ratio_Tp2 == Makino_PrPs_ratio_Tp3)
print(are_equal)
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 0.008314                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
knitr::opts_chunk$set(echo = TRUE)
# Load any libraries here
library(ggplot2)
library(minpack.lm)
T25 <- 25 + 273.15                 # Reference temperature in K
Tp <- 28.9310407291759 + 273.15    # Average measurement temperature in K
R <- 0.008314                     # Ideal gas constant in kJ K-1 mol-1
c_Vc <- 26.35                       # Scaling constant, Vcmax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vc <- 65.33                    # Activation energy, Vcmax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
c_Vo <- 22.98                       # Scaling constant, Vomax             (N. tabacum L. cv. W38, Bernacchi et al 2001)
dHa_Vo <-60.11                     # Activation energy, Vomax, kJ mol -1 (N. tabacum L. cv. W38, Bernacchi et al 2001)
Bernacchi_Vc_25 <- exp(c_Vc - dHa_Vc / (R * T25))
Bernacchi_Vo_25 <- exp(c_Vo - dHa_Vo / (R * T25))
Bernacchi_PrPs_ratio_25 <- Bernacchi_Vo_25 / Bernacchi_Vc_25
print(Bernacchi_PrPs_ratio_25)
Temp_Range <- data.frame(Temp_C = 10:40)                       # Temperatures in °C
Temp_Range$Temp_K <- Temp_Range$Temp_C + 273.15                # Temperatures in Kelvin
Temp_Range$Vc <- exp(c_Vc - dHa_Vc / (R * Temp_Range$Temp_K))  # Vc values
Temp_Range$Vo <- exp(c_Vo - dHa_Vo / (R * Temp_Range$Temp_K))  # Vo values
Temp_Range$Vo_Vc_ratio <- Temp_Range$Vo / Temp_Range$Vc        # Vo/Vc ratios
ggplot(Temp_Range, aes(x = Temp_C, y = Vo_Vc_ratio)) +
geom_line(color = "blue") +
geom_point(color = "blue", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo/Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_VcVo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vo)) +
geom_line(color = "green") +
geom_point(color = "green", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vo") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vo.png")
ggplot(Temp_Range, aes(x = Temp_C, y = Vc)) +
geom_line(color = "red") +
geom_point(color = "red", size = 2) +
labs(x = expression("Temperature ("*degree*C*")"), y = "Vc") +
theme_minimal()
ggsave("Outputs/Temp_vs_Vc.png")
View(Temp_Range)
